# Конвертер TIFF в WebP Lossless

Этот скрипт предназначен для пакетной конвертации файлов TIFF в формат WebP Lossless с максимальным сжатием. Он предлагает гибкий способ обработки файлов TIFF в различных каталогах, предоставляя подробную статистику и логирование для мониторинга процесса конвертации.

## Особенности

- **Гибкие опции ввода**:
  - Обработка текущего каталога на наличие подкаталогов с файлами TIFF.
  - Обработка указанного каталога.
  - Обработка каталогов, перечисленных в предоставленном TXT-файле.

- **Логика конвертации**:
  - Создает соответствующий каталог с суффиксом `_webp` для каждого обрабатываемого каталога.
  - Конвертирует только те файлы TIFF, которые еще не были сконвертированы (если не указано иное).
  - Использует однопоточный подход для минимизации нагрузки на жесткий диск.

- **Статистика и логирование**:
  - Отслеживает время обработки каждого файла.
  - Вычисляет коэффициенты сжатия.
  - Предоставляет общую экономию места.
  - Генерирует подробный отчет по завершении.

## Использование

### Аргументы командной строки

- **Без аргументов**: Сканирует текущий каталог на наличие подкаталогов с файлами TIFF и обрабатывает их.
- **Путь к каталогу**: Обрабатывает указанный каталог.
- **Путь к TXT-файлу**: Обрабатывает каталоги, перечисленные в предоставленном TXT-файле.

### Примеры команд

- **Обработка текущего каталога**:
  ```bash
  python tiff2webp.py
  ```

- **Обработка указанного каталога**:
  ```bash
  python tiff2webp.py /путь/к/каталогу
  ```

- **Обработка каталогов из TXT-файла**:
  ```bash
  python tiff2webp.py directories.txt
  ```

### Вывод

- Сконвертированные файлы WebP сохраняются в новом каталоге с суффиксом `_webp`.
- Создается лог-файл `tiff2webp.log` для записи процесса конвертации.
- По завершении отображается сводный отчет, включающий общее количество обработанных файлов, затраченное время, средний коэффициент сжатия и сэкономленное место.

## Требования

- Python 3.x
- Утилита `cwebp` (часть пакета WebP)
- Библиотека `tqdm` для отображения прогресса

### Установка

1. **Установка инструментов WebP**:
   - На Ubuntu: `sudo apt-get install webp`
   - На macOS: `brew install webp`
   - На Windows: Скачать с [страницы WebP от Google](https://developers.google.com/speed/webp/download)

2. **Установка зависимостей Python**:
   ```bash
   pip install tqdm
   ```

## Логирование

- Логи записываются в файл `tiff2webp.log` в текущем каталоге.
- Вывод в консоль предоставляет обновления в реальном времени о процессе конвертации.

## Обработка ошибок

- Скрипт обрабатывает ошибки корректно, записывая в лог любые проблемы, возникшие во время конвертации.
- В случае критической ошибки скрипт завершится с сообщением об ошибке.

## Лицензия

Этот скрипт предоставляется по лицензии MIT. Подробности см. в файле LICENSE.

---

[Read in English](#readme_en)